service:
  external_ip: "192.168.1.4"
  disable_upgrade_insecure_requests: true
  ratelimiter:
    type: service # service,ip
    period: 1s
    burst: 2
  interfaces:
    http:
      - address: "0.0.0.0:8180"
    https:
      - address: "0.0.0.0:8181"
        ssl_cert: ca/cert.pem #www.rgateway.com.pem #ca/cert.der
        ssl_key: ca/server.key.pem #www.rgateway.com.key #ca/server.key.pem
    tcp:
      - address: "0.0.0.0:8182"
  multi_thread:                     #如果multi_thread与current_thread同时存在，默认会启用multi_thread
    event_interval: 61              # 每一个工作内核可以多少个循环周期到达的时候，需要park。每个工作内核在循环周期之内会在本地任务池检查一下，也会在窃取任务池检查一下
    thread_name: gateway_thread_    # 线程名字，可以手动指定
    thread_stack_size: 81920         # 阻塞县城的堆栈大小
    global_queue_interval: 128     # 工作内核直接从全局队列拿取任务
    max_blocking_threads: 512       # 默认512，可以足赛的最大线程数，真是的可以阻塞的最大线程数是max_blocking_threads + core_threads
    nevents: 1024                   # 默认1024，最底层mio的事件数
    core_threads: 8                 # 如果不写，则是当前系统cpu核心数
    bind_cpu: all
  current_thread:
    event_interval: 61              #工作内核何时去yield
    thread_name: gateway_thread_    #线程名字，可以手动指定
    thread_stack_size: 81920         #阻塞县城的堆栈大小
    global_queue_interval: 128     #工作内核检查并获取全局队列中任务并执行的频率
    max_blocking_threads: 512       #默认512，可以足赛的最大线程数，真是的可以阻塞的最大线程数是max_blocking_threads + core_threads
    nevents: 1024                   #默认1024，最底层mio的事件数
    core_threads: 8                 #如果不写，则是当前系统cpu核心数 
    bind_cpu: 4                     #若超过cpu核心数，将会报错。
  cache:
    memory: # memory
      clear_time_interval: 10min
    redis: # redis
      ip: 49.232.72.55
      port: 6379
      pwd: 123456

hosts:
  httpbin:
    type: round_robin  # least_connection  random  ip_round_robin
    error: test1
    servers:
      - open.qingting.fm:80 timeout=20s weight=3 max_fails_durn=5min max_fails=10 fail_timeout=9s
      # - www.html5china.com:80 timeout=20s weight=3 max_fails_durn=5min max_fails=10 fail_timeout=9s
      # - restapi.amap.com:80 timeout=20s weight=3 max_fails_durn=5min max_fails=10 fail_timeout=9s
      # - www.kuaidi100.com:80 timeout=20s weight=3 max_fails_durn=5min max_fails=10 fail_timeout=9s
  httpsbin:
    type: round_robin
    error: test1
    servers:
      # - www.baidu.com:443
      - restapi.amap.com:443 timeout=20s weight=3 max_fails_durn=5min max_fails=10 fail_timeout=9s
  tcpbin:
    type: ip_round_robin  # least_connection  random  round_robin
    servers:
      - 110.242.68.247:80 # 110.242.68.247:80

pipes:              # 每一个pipeline拥有自己的memory_cache。
  http_pipe:
    - black_white_list:
        black_list:
          memory:
            - "127.0.0.1-127.0.0.255"
          file: examples/test.txt
        white_list:
          memory:
            - "127.0.0.1-127.0.0.255"
            - "192.168.1.1-192.168.1.255"
          file: examples/test.txt
    - ratelimiter:
        type: service # service,route
    - memory_cache_get:
        hit: 3      #命中次数达到或者超过这个数字，缓存就会自动删除
        expire: 3min  #缓存命中以后，重新设置缓存过期时间
        back: true
    - header_request:
        add:
          - rwp: 'rockwaypoint'
        del:
          - "abc"
          - "hohoho"
    - dispatche: rwp
    - header_response:
        add:
          - Connection: keep-alive
          - Access-Control-Allow-Origin: '*'
          - Access-Control-Allow-Headers: 'origin, content-type, accept'
          - Access-Control-Allow-Methods: 'GET, POST, PUT, DELETE'
    - memory_cache_set: 
        hit: 0      #初始 命中数量
        expire: 3min # 首次超时时间
                    # (年y,月m,周w,天d,小时h,分min,秒s,毫秒ms,微秒us,纳秒ns,皮秒ps) 
                    # 每周按照7天计算。
                    # 每月按照30天计算。
                    # 每年按照365天计算。
                    # ps允许设置但是除非大于1000,否则会按照0NS计算。多出来的也会抹零。系统最小单位ns
    - return: rwp
  tcp_pipe:
    - dispatche: rwp

routes:
  http_test:
    protocol: http
    priority: 999
    ratelimiter:
      type: route # route,ip
      period: 1s
      burst: 2
    in:
      type: regex
      pattern: "^/w*"
      method: ["GET", "POST"]
    out:
      type: network
      path: "/"
      out_host: httpbin
    pipe: http_pipe
  https_test:
    protocol: https
    priority: 80
    ratelimiter:
      type: route # route,ip
      period: 1s
      burst: 2
    in:
      type: regex
      pattern: "^/w*"
      method: ["GET", "POST"]
    out:
      # type: file
      # root_path: examples/web_s
      # index_file: index.html
      type: network
      path: "/"
      out_host: httpsbin
    pipe: http_pipe
  tcp_test:
    protocol: tcp
    priority: 3
    in_timeout: 5000ms  # 目前只针对TCP协议有效 
    client_buf_size: 2048
    server_buf_size: 128
    in:
      type: ip
      ranges: 
        - "127.0.0.1-127.0.0.1"
        - "192.168.1.0-192.168.1.255"
    out:
      type: network
      out_host: tcpbin
    pipe: tcp_pipe

errors:
  test1: 
    type: http
    error_list: hsc_404 hsc_500 hsc_504
    pass_next: true
    return: hsc_404